{{>message}}
<title>Buff's Bulletin</title>
<main role="main" class="d-flex flex-column" style="height: calc(100vh - 56px);">
  <!-- Layout: Sidebar + Map (fills remaining height) -->
  <div class="d-flex flex-grow-1 overflow-hidden">
    
    <!-- Map -->
    <div id="map-container" class="flex-grow-1 position-relative">
      <!-- Date filter drop down -->
      <div id="date-filter-container" class="dropdown position-absolute top-0 start-0 mt-3 p-3 bg-light shadow rounded-3"
      style="z-index: 1000; margin-left: 330px; max-width: 250px;"
      >
        <button class="btn w-100 text-start dropdown-toggle" type="button" id="dateDropdown" data-bs-toggle="dropdown" aria-expanded="false">
          Filter by Date
        </button>
        <ul class="dropdown-menu w-100" aria-labelledby="dateDropdown">
          <li><button class="dropdown-item" onclick="handleDateFilterSubmit('today')">Today</button></li>
          <li><button class="dropdown-item" onclick="handleDateFilterSubmit('today-tomorrow')">Today & Tomorrow</button></li>
          <li><button class="dropdown-item" onclick="handleDateFilterSubmit('next-week')">Next 7 Days</button></li>
          <li><button class="dropdown-item" onclick="handleDateFilterSubmit('next-month')">Next 30 Days</button></li>
        </ul>
      </div>
      
      {{>map}}

      <!-- Pin Legend -->
      <div id="map-legend" class="position-absolute top-0 end-0 mt-3 me-3 bg-white p-3 rounded-3 shadow-sm" style="z-index: 1000; width: 220px">
        <h6 class="mb-2 d-flex justify-content-between align-items-center" role="button" onclick="toggleLegend()">
          Event Types
          <i id="legend-toggle-icon" class="fa-solid fa-chevron-down"></i>
        </h6>

        <div id="legend-list-wrapper" class="legend-collapse">
          <ul class="list-unstyled mb-0 small">
            <li class="d-flex align-items-center mb-1"><span class="legend-pin" style="background-color: #FFEB3B;"></span> Activism</li>
            <li class="d-flex align-items-center mb-1"><span class="legend-pin" style="background-color: #F57C00;"></span> Athletics</li>
            <li class="d-flex align-items-center mb-1"><span class="legend-pin" style="background-color: #FFA726;"></span> Community Service</li>
            <li class="d-flex align-items-center mb-1"><span class="legend-pin" style="background-color: #FFB300;"></span> Social</li>
            <li class="d-flex align-items-center mb-1"><span class="legend-pin" style="background-color: #FFD54F;"></span> Crafts & DIY</li>
            <li class="d-flex align-items-center mb-1"><span class="legend-pin" style="background-color: #A0522D;"></span> Cultural</li>
            <li class="d-flex align-items-center mb-1"><span class="legend-pin" style="background-color: #8D6E63;"></span> Educational</li>
            <li class="d-flex align-items-center mb-1"><span class="legend-pin" style="background-color: #6D4C41;"></span> Ethics & Responsibility</li>
            <li class="d-flex align-items-center mb-1"><span class="legend-pin" style="background-color: #4E342E;"></span> Leadership</li>
            <li class="d-flex align-items-center mb-1"><span class="legend-pin" style="background-color: #3E2723;"></span> Performances</li>
          </ul>
        </div>
      </div>


      <!-- Sidebar -->
      <div id="sidebar" 
        class="position-absolute top-0 start-0 m-3 p-3 bg-light border rounded-3 shadow d-flex flex-column gap-2"
        style="width: 300px; max-height: 90vh; overflow-y: auto; z-index: 999;"
      >
        {{> new_event}}
        <!-- Fixed top content -->
        <div class="d-flex align-items-center justify-content-between">
          <h2 class="events-title mb-0">Upcoming Events</h2>
          <div class="d-flex gap-2 align-items-center">
            <button class="bg-transparent border-0 p-0 ms-2" id="expandSidebarBtn" style="font-size: 1.5rem">
              <i id="expandIcon" class="fa-solid fa-circle-chevron-right" style="color: var(--color-social);"></i>
            </button>
            {{#if user.useradmin}}
            <button class="btn btn-sm btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#event_modal">
              Create Event
            </button>
            {{/if}}
          </div>
        </div>

        <!-- Scrollable Event List container -->
        <div class="sidebar-scroll-container"></div>
      </div>
    </div>
  </div>
</main>

<script>
  window.geoEvents = {{{json geoEvents}}};
</script>

<script src="/js/map.js"></script>


<script>
  function submitFromElement(el) {
    const id   = el.dataset.eventid;                       // "4"
    const form = document.getElementById(`eventForm-${id}`);
    if (!form) return;

    /* NEW ─ copy the id into the hidden input */
    const hidden = form.querySelector('input[name="eventID"]');
    if (hidden) hidden.value = id;                         // ← ★

    form.submit();
  }

  function toggleLegend() {
    const wrapper = document.getElementById('legend-list-wrapper');
    const icon = document.getElementById('legend-toggle-icon');

    wrapper.classList.toggle('open');
    icon.classList.toggle('fa-chevron-down');
    icon.classList.toggle('fa-chevron-up');
  }
</script>

<script id="sidebar-template" type="text/x-handlebars-template">
  <ul class="list-group">
    \{{#each fetchedEvents}}
    <li class="list-group-item event-item sidebar-item" id="sidebar-item-\{{eventid}}" data-eventid="\{{eventid}}"
      onclick="submitFromElement(this)" onkeydown="if(event.key === 'Enter') submitFromElement(this)" role="button"
      tabindex="0">
      <div class="w-100">
        <strong class="fs-5">\{{eventname}}</strong><br />
        <p class="mb-0"><strong>Location:</strong>
          \{{building}}
          Room
          \{{roomnumber}}</p>
        <p class="mb-0"><strong>Hosted by:</strong> \{{clubsponser}}</p>
  
        <!-- Individual form per event -->
        <form id="eventForm-\{{eventid}}" action="/event-details" method="GET" target="_blank" style="display: none;">
          <input type="hidden" name="eventID" value="{{eventid}}" />
        </form>
  
        <div class="sidebar-extra mt-2">
          <small class="text-muted">\{{eventdescription}}</small>
        </div>
  
        <small class="text-muted">
          \{{eventDateFormatted}}
          —
          <span class="d-inline-block">\{{startTimeFormatted}}
            to
            \{{endTimeFormatted}}</span>
        </small>
  
      </div>
    </li>
    \{{/each}}
  </ul>
</script>

<script type="text/javascript">
  const sidebarRender = document.querySelector('#sidebar-template');
  const sidebarContentContainer = document.querySelector('.sidebar-scroll-container');
  const sidebarSubmitButton = document.querySelector('#sidebar-submit-button');

  document.addEventListener('DOMContentLoaded', () => {
    const events = {{{json events}}};

    //grab <script id="sidebar-template">
    const templateEl = document.querySelector('#sidebar-template');
    const sidebarContainer = document.querySelector('.sidebar-scroll-container');

    //strip ONE leading back‑slash
    const tplSource = templateEl.innerHTML.replace(/\\(\{\{[^}]+\}\})/g, '$1');

    //Compile and render
    const sidebarTpl = Handlebars.compile(tplSource);
    sidebarContainer.innerHTML = sidebarTpl({ fetchedEvents: events });
  });

  function handleDateFilterSubmit(filterValue) {
    let startDate = new Date();
    let endDate = new Date();

    switch (filterValue) {
      case 'today':
        // Do nothing: same day
        break;
      case 'today-tomorrow':
        endDate.setDate(startDate.getDate() + 1);
        break;
      case 'next-week':
        endDate.setDate(startDate.getDate() + 7);
        break;
      case 'next-month':
        endDate.setDate(startDate.getDate() + 30);
        break;
    }

    const params = new URLSearchParams({
      startDate: startDate.toISOString().slice(0, 10),
      endDate: endDate.toISOString().slice(0, 10)
    });

    fetch(`/get-events?${params}`)
      .then(result => result.json())
      .then(({ events, geoEvents }) => {
        const htmlString = Handlebars.compile(sidebarRender.innerHTML)({
          fetchedEvents: events
        });
        sidebarContentContainer.innerHTML = htmlString;
        addMarkers(geoEvents);
      })
      .catch(err => console.error("Error fetching events:", err));
  }

  function getEvents(startTime, endTime) {
    const params = new URLSearchParams({
      startTime,
      endTime
    });

    const getEventsUrl = `/get-events?${params}`;

    fetch(getEventsUrl)
      .then((result) => result.json())
      .then(({
        events,
        geoEvents
      }) => {
        console.log(geoEvents)
        const htmlString = Handlebars.compile(sidebarRender.innerHTML)({
          fetchedEvents: events
        });
        sidebarContentContainer.innerHTML = htmlString;

        addMarkers(geoEvents);
      })
  }

  function handleTimeSubmit() {
    const currentDate = new Date();

    const startTimeInput = document.querySelector('#start-time');
    const endTimeInput = document.querySelector('#end-time');

    getEvents(`${startTimeInput.value}:00`, `${endTimeInput.value}:00`);
  }
</script>
