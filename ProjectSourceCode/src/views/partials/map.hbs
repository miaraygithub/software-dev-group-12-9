<!-- the following code was taken and modified from mapbox developer guides -->
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no">
    <style>
        body { margin: 0; padding: 0; }
        #map { position: absolute; top: 0; bottom: 0; width: 100%; }
    </style>
</head>
<body>
    <div id="map" class="map"></div>
    <script>
        mapboxgl.accessToken = 'pk.eyJ1IjoibWFrZmF1YiIsImEiOiJjbTg2ZHBoODMwM2NtMm1xMnlmYXgzbTJuIn0.Q3Knt4QC1wNxRg0wGCc0Mw';
        const map = new mapboxgl.Map({
            container: 'map', // container ID
            center: [-105.26598, 40.00777], // starting [lng, lat] of CU Boulder
            zoom: 14.3 // starting zoom
        });

        const geoEvents = JSON.parse('{{{geoEvents}}}'); 
        // console.log(JSON.stringify(geoEvents, null, 2)); // check if geoEvents has been properly converted back to JSON format

        map.on('load', () => {
            map.addSource('places', {
                'type': 'geojson',
                'data': geoEvents
            });
            addMarkers();
        });

        function addMarkers() {
            const usedCoords = new Set()
            /* For each feature in the GeoJSON object above: */
            for (const marker of geoEvents.features) {
                let [lng, lat] = marker.geometry.coordinates;
                let coordKey = `${lng},${lat}`;
                
                let attempts = 0;
                while (usedCoords.has(coordKey) && attempts < 10){
                    const offset = 0.0007;
                    lng += (Math.random() - 0.5) * offset;
                    lat += (Math.random() - 0.5) * offset;
                    coordKey = `${lng},${lat}`;
                    attempts++;
                }
                usedCoords.add(coordKey);

                const el = document.createElement('div');
                el.id = `marker-${marker.properties.id}`;
                el.className = 'marker';
                el.innerHTML = '<i class="fa-solid fa-location-dot"></i>'

                /**
                * Create a marker using the div element
                * defined above and add it to the map.
                **/
                new mapboxgl.Marker(el, { offset: [0, -23] })
                .setLngLat([lng, lat])
                .addTo(map);
            }
        }

        // need to finish implementing flyToStore and createPopUp
        function flyToStore(currentFeature) {
            map.flyTo({
                center: currentFeature.geometry.coordinates,
                zoom: 15
            });
        }

        function createPopUp(currentFeature) {
            const popUps = document.getElementsByClassName('mapboxgl-popup');
            if (popUps[0]) popUps[0].remove();

            const popup = new mapboxgl.Popup({ closeOnClick: false })
                .setLngLat(currentFeature.geometry.coordinates)
                .setHTML(`<h3>${currentFeature.properties.eventName}</h3><h4>${currentFeature.properties.building} - ${currentFeature.properties.room}</h4>`)
                .addTo(map);
        }
    </script>
</body>